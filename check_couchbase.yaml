#
#
# COUCHBASE CONNECTION
#
#

# IP address or hostname of the local Couchbase node as configured in Couchbase
couchbase_host: localhost

# Couchbase admin port
# 8091 (non-SSL)
# 18091 (SSL)
couchbase_port: 18091

# Admin username
# Couchbase < 5.0: recommended to use the Read-Only Administrator
# Couchbase 5.0+: user should only have the Data Monitoring role
couchbase_user: readonly

# Admin password
couchbase_password: secret

# Use SSL when talking to Couchbase
couchbase_ssl: True


#
#
# NAGIOS CONNECTION
#
#

# IP address or hostname of the Nagios server
nagios_host: 10.0.2.2

# NSCA service port
nsca_port: 5668

# NSCA password as set on the Nagios server
# Typicaly found in nsca.cfg or nsca-ng.cfg
nsca_password: secret

# Path to the send_nsca binary
nsca_path: /sbin/send_nsca 


#
#
# SERVICE NAME 
#
#
# These settings define how the Nagios service name should be constructed.
# The service name format will be:
#  {prefix} {cluster} {bucket} - {metric description}

# Nagios service prefix
service_prefix: CB

# Include the cluster name in the service description
service_include_cluster_name: True

# Include the bucket name in the service description
service_include_bucket_name: True


#
#
# METRICS AND THRESHOLDS
#
#
#  Metrics are monitored by service: data, query, index, fts 
#
#  Metrics have 5 possible values:
#    Required:
#      metric: the Couchbase REST API metric to check
#      description: used to construct the Nagios service name 
#    Optional:
#      warn: the warning alert threshold
#      crit: the critical alert threshold
#      op: operator used to compare the current value against the thresholds
#
#    The statuses sent to Nagios are defined by the configured thresholds along
#    with an implicit "OK".  Not specifying thresholds will result in "OK" 
#    always being sent to Nagios. 
#
#    "op" allows you to define the operator used when evaluating thresholds
#    againt the current value.  Options are: ">", ">=", "=", "<=", "<"
#    The default operator is ">="
#
# Every node includes an implicit "status" metric.  "status" is a meta metric
# defined by Couchbase to quickly asertain whether health of the node.  Possible
# values are "healthy" and "unhealthy" 

# Data service
#   Metrics are configurable by bucket, allowing thresholds to be customized.
#
#   The bucket name is specified by the "bucket" parameter.
#
#   Special name "_all" will evaluate the configured metrics and thresholds for 
#   all buckets
data: 
  - bucket: _all
    metrics:
    - metric: cmd_get
      description: gets per second
      warn: 5000
      crit: 10000
    - metric: cmd_set
      description: sets per second 
      warn: 5000 
      crit: 10000 
    - metric: delete_hits
      description: deletes per second
      warn: 500
      crit: 1000
    - metric: ep_bg_fetched
      description: cache misses per second
      warn: 100 
      crit: 500
    - metric: couch_docs_fragmentation
      description: percent data fragmentation 
      warn: 35 
      crit: 50
    - metric: couch_views_fragmentation
      description: percent views fragmentation
      warn: 35
      crit: 50
    - metric: curr_connections
      description: client connections
      warn: 500
      crit: 1000
    - metric: ep_diskqueue_items
      description: items in disk write queue 
      warn: 10000
      crit: 50000
    - metric: ep_dcp_replica_items_remaining
      description: items in internal replication queue
      warn: 2500
      crit: 5000
    - metric: ep_dcp_2i_items_remaining
      description: items in 2i indexer queue
      warn: 5000
      crit: 10000
    - metric: ep_dcp_views_items_remaining
      description: items in views indexer queue 
      warn: 5000
      crit: 10000
    - metric: ep_dcp_xdcr_items_remaining
      description: items in XDCR queue 
      warn: 5000
      crit: 7500
    - metric: ep_dcp_replica_backoff
      description: internal replication backoffs
      crit: 1
    - metric: ep_dcp_xdcr_backoff
      description: XDCR backoffs
      crit: 1
    - metric: ep_dcp_xdcr_total_bytes
      description: XDCR throughput - bytes
      warn: 52428800
      crit: 104857600
    - metric: vb_avg_total_queue_age
      description: disk write queue average age
      warn: 5
      crit: 10
    - metric: ep_oom_errors
      description: out of memory errors
      crit: 1
    - metric: ep_tmp_oom_errors
      description: temporary out of memory errors
      crit: 1
    - metric: ep_kv_size
      description: KV size
      warn: 50000 
      crit: 100000
    - metric: vb_active_resident_items_ratio
      description: percent active items in memory
      warn: 50
      crit: 15
      op: "<"
    - metric: vb_replica_resident_items_ratio
      description: percent replica items in memory
      warn: 50
      crit: 15
      op: "<"
    - metric: vb_active_num
      description: number of active vbuckets
      crit: 1024
      op: "<"

# Query service
query:
  metrics:
    - metric: request.active.count
      description: active N1QL requests
      warn: 750 
      crit: 1500
    - metric: request_timer.75%
      description:
      warn: 0.1 
      crit: 0.2 
    - metric: request_timer.95%
      description: 
      warn: 0.2 
      crit: 0.3
    - metric: request_timer.99%
      description: 
      warn: 0.4 
      crit: 0.5 
    - metric: request_timer.1m.rate
      description: 
      warn: 0.25 
      crit: 0.3 
    - metric: request_timer.5m.rate
      description: 
      warn: 0.15 
      crit: 0.2 
    - metric: request_timer.15m.rate
      description: 
      warn: 0.1 
      crit: 0.15 


#
#
# PYTHON LOGGING
#
#
logging:
  version: 1
  formatters:
    simple:
      format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
  handlers:
    console:
      class: logging.StreamHandler
      level: ERROR
      formatter: simple
      stream: ext://sys.stdout
  root:
    level: DEBUG
    handlers: [console]
